{"version":3,"file":"static/js/325.5cc28a53.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetailsPage/movieDetailsPage.module.css?c394","pages/MovieDetailsPage/MovieDetailsPage.jsx","shared/services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"thumb\":\"movieDetailsPage_thumb__kaWif\",\"information\":\"movieDetailsPage_information__GRS0T\",\"filmTitle\":\"movieDetailsPage_filmTitle__mkOxB\",\"additional\":\"movieDetailsPage_additional__Tp+Vq\",\"button\":\"movieDetailsPage_button__FSz1W\",\"moreInfo\":\"movieDetailsPage_moreInfo__5nFkV\"};","import { useState, useEffect, useCallback } from 'react';\nimport {\n  Link,\n  useParams,\n  useNavigate,\n  Outlet,\n  useLocation,\n} from 'react-router-dom';\nimport Loader from 'shared/components/Loader/Loader';\nimport { getMovieById } from 'shared/services/movies-api';\n\nimport styles from './movieDetailsPage.module.css';\n\nconst MovieDatailsPage = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState();\n  const [genres, setGenres] = useState('');\n  const [userScore, setUserScore] = useState(0);\n  const [year, setYear] = useState('unknow');\n  const [loading, setLoading] = useState(false);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        const result = await getMovieById(id);\n        setMovie(result);\n      } catch ({ response }) {\n        console.log(response.data);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [id]);\n\n  useEffect(() => {\n    if (movie) {\n      const genresList = movie.genres;\n      const takeGenres = genresList.map(item => item.name).join(', ');\n      setGenres(takeGenres);\n      const rating = (movie.vote_average * 10).toFixed();\n      setUserScore(rating);\n      const releaseDate = movie.release_date.slice(0, 4);\n      setYear(releaseDate);\n    }\n  }, [movie]);\n\n  const goBack = useCallback(() => navigate(from), [navigate, from]);\n\n  return (\n    <>\n      <button onClick={goBack} className={styles.button}>\n        Go back\n      </button>\n      {loading && <Loader />}\n      <div className={styles.thumb}>\n        {movie && (\n          <div>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movie?.backdrop_path}`}\n              alt=\"\"\n            />\n          </div>\n        )}\n\n        <div className={styles.information}>\n          <h2 className={styles.filmTitle}>\n            {movie?.original_title}&nbsp;\n            <span>({year})</span>\n          </h2>\n          <p>\n            User score: <span>{userScore}%</span>\n          </p>\n          <h3>Overview</h3>\n          <p>{movie?.overview}</p>\n          <h3>Genres</h3>\n          <p>{genres}</p>\n        </div>\n      </div>\n      <div className={styles.additional}>\n        <p>Additional information</p>\n        <Link to=\"cast\" state={{ from }} className={styles.moreInfo}>\n          Cast\n        </Link>\n        <Link to=\"reviews\" state={{ from }} className={styles.moreInfo}>\n          Reviews\n        </Link>\n      </div>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDatailsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '6c7c9c59ab66a934cce9eb83e4c9fd9b',\n  },\n});\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMostPopular = async () => {\n  const { data } = await instance.get('trending/movie/day');\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n\nexport const getCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["id","useParams","useState","movie","setMovie","genres","setGenres","userScore","setUserScore","year","setYear","loading","setLoading","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovie","getMovieById","result","response","console","log","data","takeGenres","map","item","name","join","rating","vote_average","toFixed","releaseDate","release_date","slice","goBack","useCallback","onClick","className","styles","Loader","src","backdrop_path","alt","original_title","overview","to","instance","axios","baseURL","params","api_key","searchMovies","query","get","getMostPopular","getCredits","getReviews"],"sourceRoot":""}